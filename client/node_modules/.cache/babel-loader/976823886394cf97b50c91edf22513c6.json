{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tf = require(\"@tensorflow/tfjs-core\");\n\nvar __1 = require(\"..\");\n\nvar protobuf_1 = require(\"../protobuf\");\n\nexports.IS_IOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\nexports.NUM_PITCHES = 46;\nexports.MIN_PITCH = 36;\nexports.NUM_VOICES = 4;\n\nfunction pianorollToSequence(pianoroll, numberOfSteps) {\n  var reshaped = tf.tidy(function () {\n    return pianoroll.reshape([numberOfSteps, exports.NUM_PITCHES, exports.NUM_VOICES]).arraySync();\n  });\n  var sequence = protobuf_1.NoteSequence.create();\n  var notes = [];\n\n  for (var s = 0; s < numberOfSteps; s++) {\n    for (var p = 0; p < exports.NUM_PITCHES; p++) {\n      for (var v = 0; v < exports.NUM_VOICES; v++) {\n        var value = reshaped[s][p][v];\n\n        if (value === 1.0) {\n          var note = protobuf_1.NoteSequence.Note.create({\n            pitch: p + exports.MIN_PITCH,\n            instrument: v,\n            quantizedStartStep: s,\n            quantizedEndStep: s + 1\n          });\n          notes.push(note);\n        }\n      }\n    }\n  }\n\n  sequence.notes = notes;\n  sequence.totalQuantizedSteps = notes[notes.length - 1].quantizedEndStep;\n  sequence.quantizationInfo = {\n    stepsPerQuarter: 4\n  };\n  return sequence;\n}\n\nexports.pianorollToSequence = pianorollToSequence;\n\nfunction sequenceToPianoroll(ns, numberOfSteps) {\n  var pianoroll = tf.tidy(function () {\n    return tf.zeros([numberOfSteps, exports.NUM_PITCHES, exports.NUM_VOICES]).arraySync();\n  });\n  var notes = ns.notes;\n  notes.forEach(function (note) {\n    var pitchIndex = note.pitch - exports.MIN_PITCH;\n    var stepIndex = note.quantizedStartStep;\n    var duration = note.quantizedEndStep - note.quantizedStartStep;\n    var voice = note.instrument;\n\n    if (voice < 0 || voice >= exports.NUM_VOICES) {\n      __1.logging.log(\"Found invalid voice \" + voice + \". Skipping.\", 'Coconet', 5);\n    } else {\n      if (stepIndex + duration > numberOfSteps) {\n        throw new Error(\"NoteSequence \" + ns.id + \" has notes that are longer than the sequence's\\n          totalQuantizedSteps.\");\n      }\n\n      for (var i = stepIndex; i < stepIndex + duration; i++) {\n        pianoroll[i][pitchIndex][voice] = 1;\n      }\n    }\n  });\n  return tf.tensor([pianoroll]);\n}\n\nexports.sequenceToPianoroll = sequenceToPianoroll;","map":null,"metadata":{},"sourceType":"script"}