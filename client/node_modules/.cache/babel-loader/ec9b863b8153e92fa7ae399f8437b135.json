{"ast":null,"code":"import _classCallCheck from \"/home/christopher/Documents/autobeats/autobeats/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/christopher/Documents/autobeats/autobeats/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/christopher/Documents/autobeats/autobeats/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/christopher/Documents/autobeats/autobeats/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/christopher/Documents/autobeats/autobeats/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/christopher/Documents/autobeats/autobeats/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport * as THREE from 'three';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var camera, scene, renderer;\n      var mouse = new THREE.Vector2();\n      var target = new THREE.Vector2();\n      var windowHalf = new THREE.Vector2(window.innerWidth / 2, window.innerHeight / 2);\n      var loader = new THREE.FontLoader();\n\n      var init = function init() {\n        camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 500);\n        camera.position.z = 50;\n        scene = new THREE.Scene();\n        scene.background = new THREE.Color(0x2e062b);\n        loader.load('TurretRoad_Regular.json', function (font) {\n          var geom = new THREE.TextBufferGeometry('Autobeats', {\n            font: font,\n            size: 80,\n            height: 5,\n            curveSegments: 12,\n            bevelEnabled: true,\n            bevelThickness: 10,\n            bevelSize: 8,\n            bevelOffset: 0,\n            bevelSegments: 5\n          });\n          /*\n          const title = new THREE.Mesh(geom, new THREE.MeshNormalMaterial());\n          title.position.x = 30;\n          title.position.y = 30;\n          title.position.z = 50;\n          scene.add(title);*/\n        });\n        var geometry = new THREE.BoxBufferGeometry();\n        var material = new THREE.MeshNormalMaterial();\n\n        for (var i = 0; i < 1000; i++) {\n          var object = new THREE.Mesh(geometry, material);\n          object.position.x = Math.random() * 80 - 40;\n          object.position.y = Math.random() * 80 - 40;\n          object.position.z = Math.random() * 80 - 40;\n          object.rotation.x = Math.random() * 2 * Math.PI;\n          object.rotation.y = Math.random() * 2 * Math.PI;\n          object.rotation.z = Math.random() * 2 * Math.PI;\n          scene.add(object);\n        }\n\n        renderer = new THREE.WebGLRenderer({\n          antialias: true\n        });\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        document.body.appendChild(renderer.domElement);\n        document.addEventListener('mousemove', onMouseMove, false);\n        window.addEventListener('resize', onResize, false);\n      };\n\n      var onMouseMove = function onMouseMove(event) {\n        mouse.x = event.clientX - windowHalf.x;\n        mouse.y = event.clientY - windowHalf.x;\n      };\n\n      var onResize = function onResize() {\n        var width = window.innerWidth;\n        var height = window.innerHeight;\n        windowHalf.set(width / 2, height / 2);\n        camera.aspect = width / height;\n        camera.updateProjectionMatrix();\n        renderer.setSize(width, height);\n      };\n\n      var animate = function animate() {\n        target.x = (1 - mouse.x) * 0.002;\n\n        if (target.x > 0.2) {\n          target.x = 0.2;\n        }\n\n        if (target.x < -0.2) {\n          target.x = -0.2;\n        }\n\n        target.y = (1 - mouse.y) * 0.002;\n\n        if (target.y > 0.55) {\n          target.y = 0.55;\n        }\n\n        if (target.y < 0.15) {\n          target.y = 0.15;\n        }\n\n        camera.rotation.x += 0.01 * (target.y - camera.rotation.x);\n        camera.rotation.y += 0.01 * (target.x - camera.rotation.y);\n        requestAnimationFrame(animate);\n        renderer.render(scene, camera);\n      };\n\n      init();\n      animate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/christopher/Documents/autobeats/autobeats/src/App.js"],"names":["React","Component","THREE","App","camera","scene","renderer","mouse","Vector2","target","windowHalf","window","innerWidth","innerHeight","loader","FontLoader","init","PerspectiveCamera","position","z","Scene","background","Color","load","font","geom","TextBufferGeometry","size","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","geometry","BoxBufferGeometry","material","MeshNormalMaterial","i","object","Mesh","x","Math","random","y","rotation","PI","add","WebGLRenderer","antialias","setSize","document","body","appendChild","domElement","addEventListener","onMouseMove","onResize","event","clientX","clientY","width","set","aspect","updateProjectionMatrix","animate","requestAnimationFrame","render"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;IAEMC,G;;;;;;;;;;;;;wCAEgB;AAClB,UAAIC,MAAJ,EAAYC,KAAZ,EAAmBC,QAAnB;AAEA,UAAMC,KAAK,GAAG,IAAIL,KAAK,CAACM,OAAV,EAAd;AACA,UAAMC,MAAM,GAAG,IAAIP,KAAK,CAACM,OAAV,EAAf;AACA,UAAME,UAAU,GAAG,IAAIR,KAAK,CAACM,OAAV,CAAmBG,MAAM,CAACC,UAAP,GAAoB,CAAvC,EAA0CD,MAAM,CAACE,WAAP,GAAqB,CAA/D,CAAnB;AACA,UAAMC,MAAM,GAAG,IAAIZ,KAAK,CAACa,UAAV,EAAf;;AAEA,UAAIC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAEfZ,QAAAA,MAAM,GAAG,IAAIF,KAAK,CAACe,iBAAV,CAA6B,EAA7B,EAAiCN,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAA5D,EAAyE,GAAzE,EAA8E,GAA9E,CAAT;AACAT,QAAAA,MAAM,CAACc,QAAP,CAAgBC,CAAhB,GAAoB,EAApB;AAEAd,QAAAA,KAAK,GAAG,IAAIH,KAAK,CAACkB,KAAV,EAAR;AACAf,QAAAA,KAAK,CAACgB,UAAN,GAAmB,IAAInB,KAAK,CAACoB,KAAV,CAAgB,QAAhB,CAAnB;AAEAR,QAAAA,MAAM,CAACS,IAAP,CAAY,yBAAZ,EAAuC,UAACC,IAAD,EAAU;AAC/C,cAAIC,IAAI,GAAG,IAAIvB,KAAK,CAACwB,kBAAV,CAA6B,WAA7B,EAA0C;AACnDF,YAAAA,IAAI,EAAEA,IAD6C;AAEnDG,YAAAA,IAAI,EAAE,EAF6C;AAGnDC,YAAAA,MAAM,EAAE,CAH2C;AAInDC,YAAAA,aAAa,EAAE,EAJoC;AAKnDC,YAAAA,YAAY,EAAE,IALqC;AAMnDC,YAAAA,cAAc,EAAE,EANmC;AAOnDC,YAAAA,SAAS,EAAE,CAPwC;AAQnDC,YAAAA,WAAW,EAAE,CARsC;AASnDC,YAAAA,aAAa,EAAE;AAToC,WAA1C,CAAX;AAUG;;;;;;AAMJ,SAjBD;AAmBA,YAAMC,QAAQ,GAAG,IAAIjC,KAAK,CAACkC,iBAAV,EAAjB;AACA,YAAMC,QAAQ,GAAG,IAAInC,KAAK,CAACoC,kBAAV,EAAjB;;AAEA,aAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,IAArB,EAA2BA,CAAC,EAA5B,EAAkC;AAEhC,cAAMC,MAAM,GAAG,IAAItC,KAAK,CAACuC,IAAV,CAAgBN,QAAhB,EAA0BE,QAA1B,CAAf;AACAG,UAAAA,MAAM,CAACtB,QAAP,CAAgBwB,CAAhB,GAAoBC,IAAI,CAACC,MAAL,KAAgB,EAAhB,GAAqB,EAAzC;AACAJ,UAAAA,MAAM,CAACtB,QAAP,CAAgB2B,CAAhB,GAAoBF,IAAI,CAACC,MAAL,KAAgB,EAAhB,GAAqB,EAAzC;AACAJ,UAAAA,MAAM,CAACtB,QAAP,CAAgBC,CAAhB,GAAoBwB,IAAI,CAACC,MAAL,KAAgB,EAAhB,GAAqB,EAAzC;AACAJ,UAAAA,MAAM,CAACM,QAAP,CAAgBJ,CAAhB,GAAoBC,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoBD,IAAI,CAACI,EAA7C;AACAP,UAAAA,MAAM,CAACM,QAAP,CAAgBD,CAAhB,GAAoBF,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoBD,IAAI,CAACI,EAA7C;AACAP,UAAAA,MAAM,CAACM,QAAP,CAAgB3B,CAAhB,GAAoBwB,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoBD,IAAI,CAACI,EAA7C;AACA1C,UAAAA,KAAK,CAAC2C,GAAN,CAAWR,MAAX;AAED;;AAEDlC,QAAAA,QAAQ,GAAG,IAAIJ,KAAK,CAAC+C,aAAV,CAAyB;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAzB,CAAX;AACA5C,QAAAA,QAAQ,CAAC6C,OAAT,CAAkBxC,MAAM,CAACC,UAAzB,EAAqCD,MAAM,CAACE,WAA5C;AACAuC,QAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA2BhD,QAAQ,CAACiD,UAApC;AAEAH,QAAAA,QAAQ,CAACI,gBAAT,CAA2B,WAA3B,EAAwCC,WAAxC,EAAqD,KAArD;AACA9C,QAAAA,MAAM,CAAC6C,gBAAP,CAAyB,QAAzB,EAAmCE,QAAnC,EAA6C,KAA7C;AAED,OAlDD;;AAoDA,UAAID,WAAW,GAAG,SAAdA,WAAc,CAACE,KAAD,EAAW;AAE3BpD,QAAAA,KAAK,CAACmC,CAAN,GAAYiB,KAAK,CAACC,OAAN,GAAgBlD,UAAU,CAACgC,CAAvC;AACAnC,QAAAA,KAAK,CAACsC,CAAN,GAAYc,KAAK,CAACE,OAAN,GAAgBnD,UAAU,CAACgC,CAAvC;AAED,OALD;;AAOA,UAAIgB,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAEnB,YAAMI,KAAK,GAAGnD,MAAM,CAACC,UAArB;AACA,YAAMgB,MAAM,GAAGjB,MAAM,CAACE,WAAtB;AAEAH,QAAAA,UAAU,CAACqD,GAAX,CAAgBD,KAAK,GAAG,CAAxB,EAA2BlC,MAAM,GAAG,CAApC;AAEAxB,QAAAA,MAAM,CAAC4D,MAAP,GAAgBF,KAAK,GAAGlC,MAAxB;AACAxB,QAAAA,MAAM,CAAC6D,sBAAP;AACA3D,QAAAA,QAAQ,CAAC6C,OAAT,CAAkBW,KAAlB,EAAyBlC,MAAzB;AAED,OAXD;;AAaA,UAAIsC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAElBzD,QAAAA,MAAM,CAACiC,CAAP,GAAW,CAAE,IAAInC,KAAK,CAACmC,CAAZ,IAAkB,KAA7B;;AACA,YAAIjC,MAAM,CAACiC,CAAP,GAAW,GAAf,EAAoB;AAClBjC,UAAAA,MAAM,CAACiC,CAAP,GAAW,GAAX;AACD;;AACD,YAAIjC,MAAM,CAACiC,CAAP,GAAW,CAAC,GAAhB,EAAqB;AACnBjC,UAAAA,MAAM,CAACiC,CAAP,GAAW,CAAC,GAAZ;AACD;;AACDjC,QAAAA,MAAM,CAACoC,CAAP,GAAW,CAAE,IAAItC,KAAK,CAACsC,CAAZ,IAAkB,KAA7B;;AACA,YAAIpC,MAAM,CAACoC,CAAP,GAAW,IAAf,EAAqB;AACnBpC,UAAAA,MAAM,CAACoC,CAAP,GAAW,IAAX;AACD;;AACD,YAAIpC,MAAM,CAACoC,CAAP,GAAW,IAAf,EAAqB;AACnBpC,UAAAA,MAAM,CAACoC,CAAP,GAAW,IAAX;AACD;;AAEDzC,QAAAA,MAAM,CAAC0C,QAAP,CAAgBJ,CAAhB,IAAqB,QAASjC,MAAM,CAACoC,CAAP,GAAWzC,MAAM,CAAC0C,QAAP,CAAgBJ,CAApC,CAArB;AACAtC,QAAAA,MAAM,CAAC0C,QAAP,CAAgBD,CAAhB,IAAqB,QAASpC,MAAM,CAACiC,CAAP,GAAWtC,MAAM,CAAC0C,QAAP,CAAgBD,CAApC,CAArB;AAEAsB,QAAAA,qBAAqB,CAAED,OAAF,CAArB;AACA5D,QAAAA,QAAQ,CAAC8D,MAAT,CAAiB/D,KAAjB,EAAwBD,MAAxB;AAED,OAvBD;;AAyBAY,MAAAA,IAAI;AACJkD,MAAAA,OAAO;AACR;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EAnHejE,S;;AAsHlB,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport * as THREE from 'three';\n\nclass App extends Component {\n\n  componentDidMount() {\n    let camera, scene, renderer;\n\n    const mouse = new THREE.Vector2();\n    const target = new THREE.Vector2();\n    const windowHalf = new THREE.Vector2( window.innerWidth / 2, window.innerHeight / 2 );\n    const loader = new THREE.FontLoader();\n\n    let init = () => {\n\n      camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 500 );\n      camera.position.z = 50;\n\n      scene = new THREE.Scene();\n      scene.background = new THREE.Color(0x2e062b)\n      \n      loader.load('TurretRoad_Regular.json', (font) => {\n        let geom = new THREE.TextBufferGeometry('Autobeats', {\n          font: font,\n          size: 80,\n          height: 5,\n          curveSegments: 12,\n          bevelEnabled: true,\n          bevelThickness: 10,\n          bevelSize: 8,\n          bevelOffset: 0,\n          bevelSegments: 5\n        });/*\n        const title = new THREE.Mesh(geom, new THREE.MeshNormalMaterial());\n        title.position.x = 30;\n        title.position.y = 30;\n        title.position.z = 50;\n        scene.add(title);*/\n      });\n\n      const geometry = new THREE.BoxBufferGeometry();\n      const material = new THREE.MeshNormalMaterial();\n      \n      for ( let i = 0; i < 1000; i ++ ) {\n      \n        const object = new THREE.Mesh( geometry, material );\n        object.position.x = Math.random() * 80 - 40;\n        object.position.y = Math.random() * 80 - 40;\n        object.position.z = Math.random() * 80 - 40;\n        object.rotation.x = Math.random() * 2 * Math.PI;\n        object.rotation.y = Math.random() * 2 * Math.PI;\n        object.rotation.z = Math.random() * 2 * Math.PI;\n        scene.add( object );\n            \n      }\n\n      renderer = new THREE.WebGLRenderer( { antialias: true } );\n      renderer.setSize( window.innerWidth, window.innerHeight );\n      document.body.appendChild( renderer.domElement );\n      \n      document.addEventListener( 'mousemove', onMouseMove, false );\n      window.addEventListener( 'resize', onResize, false );\n\n    }\n\n    let onMouseMove = (event) => {\n\n      mouse.x = ( event.clientX - windowHalf.x );\n      mouse.y = ( event.clientY - windowHalf.x );\n\n    }\n\n    let onResize = () => {\n\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      \n      windowHalf.set( width / 2, height / 2 );\n      \n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderer.setSize( width, height );\n            \n    }\n\n    let animate = () => {\n\n      target.x = ( 1 - mouse.x ) * 0.002;\n      if (target.x > 0.2) {\n        target.x = 0.2;\n      }\n      if (target.x < -0.2) {\n        target.x = -0.2\n      }\n      target.y = ( 1 - mouse.y ) * 0.002;\n      if (target.y > 0.55) {\n        target.y = 0.55;\n      }\n      if (target.y < 0.15) {\n        target.y = 0.15\n      }\n      \n      camera.rotation.x += 0.01 * ( target.y - camera.rotation.x );\n      camera.rotation.y += 0.01 * ( target.x - camera.rotation.y );\n\n      requestAnimationFrame( animate );\n      renderer.render( scene, camera );\n\n    }\n\n    init();\n    animate();\n  }\n\n  render() {\n    return (\n      <div />\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}