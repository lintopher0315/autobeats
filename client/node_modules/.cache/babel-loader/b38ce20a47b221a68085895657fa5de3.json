{"ast":null,"code":"export function cleanName(str) {\n  //ableton adds some weird stuff to the track\n  return str.replace(/\\u0000/g, '');\n}\nexport function ticksToSeconds(ticks, header) {\n  return 60 / header.bpm * (ticks / header.PPQ);\n}\nexport function isNumber(val) {\n  return typeof val === 'number';\n}\nexport function isString(val) {\n  return typeof val === 'string';\n}\nexport var isPitch = function () {\n  var regexp = /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i;\n  return function (val) {\n    return isString(val) && regexp.test(val);\n  };\n}();\nexport function midiToPitch(midi) {\n  var scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n  var octave = Math.floor(midi / 12) - 1;\n  var note = midi % 12;\n  return scaleIndexToNote[note] + octave;\n}\nexport var pitchToMidi = function () {\n  var regexp = /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i;\n  var noteToScaleIndex = {\n    \"cbb\": -2,\n    \"cb\": -1,\n    \"c\": 0,\n    \"c#\": 1,\n    \"cx\": 2,\n    \"dbb\": 0,\n    \"db\": 1,\n    \"d\": 2,\n    \"d#\": 3,\n    \"dx\": 4,\n    \"ebb\": 2,\n    \"eb\": 3,\n    \"e\": 4,\n    \"e#\": 5,\n    \"ex\": 6,\n    \"fbb\": 3,\n    \"fb\": 4,\n    \"f\": 5,\n    \"f#\": 6,\n    \"fx\": 7,\n    \"gbb\": 5,\n    \"gb\": 6,\n    \"g\": 7,\n    \"g#\": 8,\n    \"gx\": 9,\n    \"abb\": 7,\n    \"ab\": 8,\n    \"a\": 9,\n    \"a#\": 10,\n    \"ax\": 11,\n    \"bbb\": 9,\n    \"bb\": 10,\n    \"b\": 11,\n    \"b#\": 12,\n    \"bx\": 13\n  };\n  return function (note) {\n    var split = regexp.exec(note);\n    var pitch = split[1];\n    var octave = split[2];\n    var index = noteToScaleIndex[pitch.toLowerCase()];\n    return index + (parseInt(octave) + 1) * 12;\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}