import { io } from '@tensorflow/tfjs-core';
import { BaseCallbackConstructor } from './base_callbacks';
import { ContainerArgs } from './engine/container';
import { InputConfig } from './engine/input_layer';
import { SymbolicTensor } from './engine/topology';
import { Model } from './engine/training';
import { Sequential, SequentialArgs } from './models';
export declare function model(args: ContainerArgs): Model;
export declare function sequential(config?: SequentialArgs): Sequential;
export declare function loadModel(pathOrIOHandler: string | io.IOHandler, strict?: boolean): Promise<Model>;
export declare function loadLayersModel(pathOrIOHandler: string | io.IOHandler, options?: io.LoadOptions): Promise<Model>;
export declare function input(config: InputConfig): SymbolicTensor;
export declare function registerCallbackConstructor(verbosityLevel: number, callbackConstructor: BaseCallbackConstructor): void;
