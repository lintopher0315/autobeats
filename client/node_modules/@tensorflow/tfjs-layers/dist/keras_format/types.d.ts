export declare type PyJsonValue = boolean | number | string | null | PyJsonArray | PyJsonDict;
export interface PyJsonDict {
    [key: string]: PyJsonValue;
}
export declare type PyJson<Keys extends string> = {
    [x in Keys]?: PyJsonValue;
};
export interface PyJsonArray extends Array<PyJsonValue> {
}
export interface BaseSerialization<N extends string, T extends PyJson<Extract<keyof T, string>>> extends PyJsonDict {
    class_name: N;
    config: T;
}
